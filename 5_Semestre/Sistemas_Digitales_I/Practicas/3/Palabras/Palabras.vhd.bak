library IEEE;
use IEEE.std_logic_1164.all;

entity Palabras is
   port 
	(
        clock           : in    std_logic;
        --i_buttons 		: in 	std_logic_vector(3 downto 0); 		-- Entrada de 4 bits para escoger palabras 
		o_segmentos     : out 	std_logic_vector(7 downto 0);   	-- Salida para el display de 7 segmentos
		o_comunes       : out 	std_logic_vector(3 downto 0)   	    -- Salida para comun de cada display
	);
end Palabras;

architecture Multiplexado of Palabras is
    -- Las señales son variables que no tienen un pin asignado
    signal count        : integer range 0 to 10000;
    signal comun_index  : std_logic_vector(1 downto 0) := "00";

    signal letter1       : std_logic_vector(7 downto 0) := "10001001"; -- H
    signal letter2       : std_logic_vector(7 downto 0) := "11000000"; -- O
    signal letter3       : std_logic_vector(7 downto 0) := "11000111"; -- L
    signal letter4       : std_logic_vector(7 downto 0) := "10001000"; -- A

begin
	delay_clock : process (clock)
    begin
        if rising_edge(clock) then
            if count < 10000 then
                count <= count + 1;
            else
                comun_index <= comun_index + 1;
                count <= 0;
            end if;
        end if;
    end process;
    
    display_print : process (comun_index)
    begin
        case comun_index is
            when "00" => 
                o_comunes   <= "1110",
                o_segmentos <= letter1; 
                when "01" => 
                o_comunes <= "1101",
                o_segmentos <= letter2; 
                when "10" => 
                o_comunes <= "1011",
                o_segmentos <= letter3; 
                when "11" => 
                o_comunes <= "0111",
                o_segmentos <= letter4; 
            when others => 
                o_comunes <= "1111"; 
        end case;            
    end process;

end Multiplexado;


-- display <=	"10001000" when "11111", -- A
--            "10000011" when "11110", -- B
--            "11000110" when "11101", -- C
--            "10100001" when "11100", -- D
--            "10000110" when "11011", -- E
--            "10001110" when "11010", -- F
--            "10000010" when "11001", -- G
--            "10001001" when "11000", -- H
--            "11001111" when "10111", -- I
--            "11100001" when "10110", -- J
--            "10000101" when "10101", -- K
--            "11000111" when "10100", -- L 
--            "10110000" when "10011", -- M 
--            "11001000" when "10010", -- N
--            "10101010" when "10001", -- Ñ
--            "11000000" when "10000", -- O
--            "10001100" when "01111", -- P 
--            "10011000" when "01110", -- Q 
--            "11001110" when "01101", -- R 
--            "10010010" when "01100", -- S 
--            "10000111" when "01011", -- T 
--            "11000001" when "01010", -- U 
--            "10000110" when "01001", -- W  
--            "10100100" when "01000", -- Z
--            "00000000" when others;