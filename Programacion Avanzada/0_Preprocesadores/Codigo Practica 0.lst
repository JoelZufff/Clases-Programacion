CCS PCH C Compiler, Version 5.112, 29001               12-ago.-23 12:36

               Filename:   C:\Users\diego\Desktop\Programacion Avanzada\Practicas\Practica 0\Codigo Practica 0.lst

               ROM used:   100 bytes (0%)
                           Largest free fragment is 32668
               RAM used:   5 (0%) at main() level
                           6 (0%) worst case
               Stack used: 0 locations
               Stack size: 31

*
0000:  GOTO   0032
.................... #include <18f4550.h>   // Libreria del Microcontrolador
.................... //////////// Standard Header file for the PIC18F4550 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC18F4550
.................... 
.................... #list
.................... 
.................... #fuses XT, NOWDT, NOPROTECT, NOLVP, CPUDIV1, PLL1, NOMCLR // Fusibles (Configuraciones del microcontrolador)
.................... #use delay(clock = 4M)  // 4M es 4 millones. Establecemos la velocidad va a operar el micro
0004:  CLRF   FEA
0006:  MOVLW  06
0008:  MOVWF  FE9
000A:  MOVF   FEF,W
000C:  BTFSC  FD8.2
000E:  GOTO   002E
0012:  MOVLW  01
0014:  MOVWF  01
0016:  CLRF   00
0018:  DECFSZ 00,F
001A:  BRA    0018
001C:  DECFSZ 01,F
001E:  BRA    0016
0020:  MOVLW  4A
0022:  MOVWF  00
0024:  DECFSZ 00,F
0026:  BRA    0024
0028:  BRA    002A
002A:  DECFSZ FEF,F
002C:  BRA    0012
002E:  GOTO   0056 (RETURN)
.................... 
.................... void main(void)
0032:  CLRF   FF8
0034:  BCF    FD0.7
0036:  MOVF   FC1,W
0038:  ANDLW  C0
003A:  IORLW  0F
003C:  MOVWF  FC1
003E:  MOVLW  07
0040:  MOVWF  FB4
.................... {
....................    for(;;) // Ciclo infinito
....................    {
....................       if(input(pin_a0)) // La funcion devuelve un 1 si se presiona un boton
0042:  BSF    F92.0
0044:  BTFSS  F80.0
0046:  BRA    005C
....................       {
....................          output_b(0b11111111); // Prende los leds de una sección en este caso la B
0048:  CLRF   F93
004A:  SETF   F8A
....................          delay_ms(500); // Agrega un delay de 1000 ms
004C:  MOVLW  02
004E:  MOVWF  05
0050:  MOVLW  FA
0052:  MOVWF  06
0054:  BRA    0004
0056:  DECFSZ 05,F
0058:  BRA    0050
....................       }
005A:  BRA    0060
....................       else
....................       {
....................          output_b(0); // Apaga el led
005C:  CLRF   F93
005E:  CLRF   F8A
....................       }
0060:  BRA    0042
....................    }
.................... }
.................... 
0062:  SLEEP 

Configuration Fuses:
   Word  1: C020   PLL1 CPUDIV1 USBDIV XT FCMEN IESO
   Word  2: 1E3E   PUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 0700   CCP2C1 PBADEN LPT1OSC NOMCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
