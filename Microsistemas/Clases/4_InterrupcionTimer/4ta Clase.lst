CCS PCH C Compiler, Version 5.112, 29001               06-feb.-24 10:52

               Filename:   C:\Users\diego\Desktop\Microsistemas\Clases\4\4ta Clase.lst

               ROM used:   222 bytes (1%)
                           Largest free fragment is 32542
               RAM used:   25 (1%) at main() level
                           25 (1%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 31

*
0000:  GOTO   00BC
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  FF2.5
0056:  GOTO   0060
005A:  BTFSC  FF2.2
005C:  GOTO   00AE
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVFF  15,FF5
009A:  MOVFF  16,FF6
009E:  MOVFF  17,FF7
00A2:  MOVF   04,W
00A4:  MOVFF  06,FE0
00A8:  MOVFF  05,FD8
00AC:  RETFIE 0
.................... // Preprocesadores de Microcontrolador //
.................... #include    <18f4550.h>                                             // Libreria del Microcontrolador
.................... //////////// Standard Header file for the PIC18F4550 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC18F4550
.................... 
.................... #list
.................... 
.................... #fuses      XT, NOWDT, NOPROTECT, NOLVP, NOMCLR                     // Fusibles (Configuraciones del microcontrolador)
.................... #use        delay(clock = 4M, crystal = 4M)                         // Configuracion de frecuencia y delay
.................... 
.................... // Establecemos direccion de registros
.................... #BYTE       TRISB       = 0xF93             // Configurar Pines
.................... #BYTE       PORTB       = 0xF81             // Input
.................... #BYTE       LATB        = 0xF8A             // Output
.................... 
.................... #BYTE       INTCON      = 0xFF2
.................... #BYTE       TMR0L       = 0xFD6
.................... #BIT        TMR0IP      = 0xFF1.2
.................... #BYTE       T0CON       = 0xFD5
.................... 
.................... #int_TIMER0
.................... void TIMER0_isr(void) 
.................... {
....................    LATB ^= 0x01;
00AE:  MOVLW  01
00B0:  XORWF  F8A,F
....................    TMR0L = 33;
00B2:  MOVLW  21
00B4:  MOVWF  FD6
00B6:  BCF    FF2.2
00B8:  GOTO   0060
.................... }
.................... 
.................... void main()
00BC:  CLRF   FF8
00BE:  BCF    FD0.7
00C0:  BSF    07.7
00C2:  MOVF   FC1,W
00C4:  ANDLW  C0
00C6:  IORLW  0F
00C8:  MOVWF  FC1
00CA:  MOVLW  07
00CC:  MOVWF  FB4
.................... {  
....................    // Configuracion de puertos I/O
....................    TRISB    = 0b00000000;                   // 0 Salida | 1 Entrada
00CE:  CLRF   F93
....................    
....................    // Configuracion de interrupciones
....................    INTCON   = 0b11100100;
00D0:  MOVLW  E4
00D2:  MOVWF  FF2
....................    
....................    // Configuracion de timer
....................    T0CON    = 0b11000000;
00D4:  MOVLW  C0
00D6:  MOVWF  FD5
....................    TMR0L    = 33;
00D8:  MOVLW  21
00DA:  MOVWF  FD6
....................    TMR0IP   = 1;
00DC:  BSF    FF1.2
....................    
....................    while (true)
....................    {
00DE:  BRA    00DE
.................... 
....................    }
.................... }
00E0:  SLEEP 

Configuration Fuses:
   Word  1: C000   PLL1 CPUDIV1 NOUSBDIV XT FCMEN IESO
   Word  2: 1E3E   PUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 0700   CCP2C1 PBADEN LPT1OSC NOMCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
