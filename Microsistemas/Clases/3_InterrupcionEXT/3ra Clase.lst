CCS PCH C Compiler, Version 5.112, 29001               30-ene.-24 11:32

               Filename:   C:\Users\diego\Desktop\Automatizacion\Microsistemas\Clases\3\3ra Clase.lst

               ROM used:   498 bytes (2%)
                           Largest free fragment is 32266
               RAM used:   29 (1%) at main() level
                           32 (2%) worst case
               Stack used: 2 locations (0 in main + 2 for interrupts)
               Stack size: 31

*
0000:  GOTO   0190
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  FF2.4
0056:  GOTO   0060
005A:  BTFSC  FF2.1
005C:  GOTO   00EC
0060:  BTFSS  FF0.3
0062:  GOTO   006C
0066:  BTFSC  FF0.0
0068:  GOTO   0112
006C:  BTFSS  FF0.4
006E:  GOTO   0078
0072:  BTFSC  FF0.1
0074:  GOTO   0138
0078:  MOVFF  0E,00
007C:  MOVFF  0F,01
0080:  MOVFF  10,02
0084:  MOVFF  11,03
0088:  MOVFF  0C,FE9
008C:  MOVFF  07,FEA
0090:  BSF    07.7
0092:  MOVFF  08,FE1
0096:  MOVFF  09,FE2
009A:  MOVFF  0A,FD9
009E:  MOVFF  0B,FDA
00A2:  MOVFF  12,FF3
00A6:  MOVFF  13,FF4
00AA:  MOVFF  14,FFA
00AE:  MOVFF  15,FF5
00B2:  MOVFF  16,FF6
00B6:  MOVFF  17,FF7
00BA:  MOVF   04,W
00BC:  MOVFF  06,FE0
00C0:  MOVFF  05,FD8
00C4:  RETFIE 0
.................... // Preprocesadores de Microcontrolador //
.................... #include    <18f4550.h>                                             // Libreria del Microcontrolador
.................... //////////// Standard Header file for the PIC18F4550 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC18F4550
.................... 
.................... #list
.................... 
.................... #fuses      INTRC, CPUDIV1, PLL1, NOWDT, NOPROTECT, NOLVP, NOMCLR   // Fusibles (Configuraciones del microcontrolador)
.................... #use        delay(clock = 8M)                                       // Configuracion de frecuencia y delay
00C6:  CLRF   FEA
00C8:  MOVLW  1F
00CA:  MOVWF  FE9
00CC:  MOVF   FEF,W
00CE:  BZ    00EA
00D0:  MOVLW  02
00D2:  MOVWF  01
00D4:  CLRF   00
00D6:  DECFSZ 00,F
00D8:  BRA    00D6
00DA:  DECFSZ 01,F
00DC:  BRA    00D4
00DE:  MOVLW  97
00E0:  MOVWF  00
00E2:  DECFSZ 00,F
00E4:  BRA    00E2
00E6:  DECFSZ FEF,F
00E8:  BRA    00D0
00EA:  RETURN 0
.................... 
.................... // Establecemos direccion de registros
.................... #BYTE       TRISB       = 0xF93           // Configurar Pines
.................... #BYTE       PORTB       = 0xF81
.................... #BYTE       LATB        = 0xF8A           // Output
.................... 
.................... #BYTE       TRISD       = 0xF95
.................... #BYTE       PORTD       = 0xF83
.................... #BYTE       LATD        = 0xF8C
.................... 
.................... #BYTE       INTCON      = 0xFF2
.................... #BYTE       INTCON2     = 0xFF1
.................... #BYTE       INTCON3     = 0xFF0
.................... 
.................... #BIT        IPEN        = 0xFD0.7
.................... 
.................... long i;
.................... 
.................... #INT_EXT
.................... void blink()
.................... {
....................     for(i = 0; i <= 16; i++)
00EC:  CLRF   1B
00EE:  CLRF   1A
00F0:  MOVF   1B,F
00F2:  BNZ   010C
00F4:  MOVF   1A,W
00F6:  SUBLW  10
00F8:  BNC   010C
....................     {
....................         LATD = i;
00FA:  MOVFF  1A,F8C
....................         delay_ms(200);
00FE:  MOVLW  C8
0100:  MOVWF  1F
0102:  RCALL  00C6
0104:  INCF   1A,F
0106:  BTFSC  FD8.2
0108:  INCF   1B,F
010A:  BRA    00F0
....................     }
.................... }
.................... 
010C:  BCF    FF2.1
010E:  GOTO   0078
.................... #INT_EXT1
.................... void blink2()
.................... {
....................     for(i = 16; i <= 255; i+=16)
0112:  CLRF   1B
0114:  MOVLW  10
0116:  MOVWF  1A
0118:  MOVF   1B,W
011A:  SUBLW  00
011C:  BNC   0132
....................     {
....................         LATD = i;
011E:  MOVFF  1A,F8C
....................         delay_ms(200);
0122:  MOVLW  C8
0124:  MOVWF  1F
0126:  RCALL  00C6
0128:  MOVLW  10
012A:  ADDWF  1A,F
012C:  MOVLW  00
012E:  ADDWFC 1B,F
0130:  BRA    0118
....................     }
.................... }
.................... 
0132:  BCF    FF0.0
0134:  GOTO   0078
.................... #INT_EXT2
.................... void blink3()
.................... {
....................     LATD = 0xFF;
0138:  SETF   F8C
....................     delay_ms(500);
013A:  MOVLW  02
013C:  MOVWF  1E
013E:  MOVLW  FA
0140:  MOVWF  1F
0142:  RCALL  00C6
0144:  DECFSZ 1E,F
0146:  BRA    013E
....................     LATD = 0;
0148:  CLRF   F8C
....................     delay_ms(500);
014A:  MOVLW  02
014C:  MOVWF  1E
014E:  MOVLW  FA
0150:  MOVWF  1F
0152:  RCALL  00C6
0154:  DECFSZ 1E,F
0156:  BRA    014E
....................     LATD = 0xFF;
0158:  SETF   F8C
....................     delay_ms(500);
015A:  MOVLW  02
015C:  MOVWF  1E
015E:  MOVLW  FA
0160:  MOVWF  1F
0162:  RCALL  00C6
0164:  DECFSZ 1E,F
0166:  BRA    015E
....................     LATD = 0;
0168:  CLRF   F8C
....................     delay_ms(500);
016A:  MOVLW  02
016C:  MOVWF  1E
016E:  MOVLW  FA
0170:  MOVWF  1F
0172:  RCALL  00C6
0174:  DECFSZ 1E,F
0176:  BRA    016E
....................     LATD = 0xFF;
0178:  SETF   F8C
....................     delay_ms(500);
017A:  MOVLW  02
017C:  MOVWF  1E
017E:  MOVLW  FA
0180:  MOVWF  1F
0182:  RCALL  00C6
0184:  DECFSZ 1E,F
0186:  BRA    017E
....................     LATD = 0;
0188:  CLRF   F8C
018A:  BCF    FF0.1
018C:  GOTO   0078
.................... }
.................... 
.................... void main()
0190:  CLRF   FF8
0192:  BCF    FD0.7
0194:  BSF    07.7
0196:  MOVLW  70
0198:  MOVWF  FD3
019A:  MOVF   FD3,W
019C:  MOVF   FC1,W
019E:  ANDLW  C0
01A0:  IORLW  0F
01A2:  MOVWF  FC1
01A4:  MOVLW  07
01A6:  MOVWF  FB4
.................... {
....................     // Configuracion de registros de puertos IO
....................     TRISB       = 0b00000111;
01A8:  MOVLW  07
01AA:  MOVWF  F93
....................     TRISD       = 0;
01AC:  CLRF   F95
....................     
....................     // Configuracion de registros de interrupciones
....................     INTCON      = 0b11110000;
01AE:  MOVLW  F0
01B0:  MOVWF  FF2
....................     INTCON2     = 0b01110000;
01B2:  MOVLW  70
01B4:  MOVWF  FF1
....................     INTCON3     = 0b00011000;
01B6:  MOVLW  18
01B8:  MOVWF  FF0
....................     IPEN        = 1;
01BA:  BSF    FD0.7
....................     
....................     while(TRUE)
....................     {
....................         for(i = 0b00000001; i <= 0b10000000; i <<= 1)
01BC:  CLRF   1B
01BE:  MOVLW  01
01C0:  MOVWF  1A
01C2:  MOVF   1B,F
01C4:  BNZ   01F2
01C6:  MOVF   1A,W
01C8:  SUBLW  80
01CA:  BNC   01F2
....................         {
....................             LATD = i;
01CC:  MOVFF  1A,F8C
....................             delay_ms(500);
01D0:  MOVLW  02
01D2:  MOVWF  1C
01D4:  CLRF   19
01D6:  BTFSC  FF2.7
01D8:  BSF    19.7
01DA:  BCF    FF2.7
01DC:  MOVLW  FA
01DE:  MOVWF  1F
01E0:  RCALL  00C6
01E2:  BTFSC  19.7
01E4:  BSF    FF2.7
01E6:  DECFSZ 1C,F
01E8:  BRA    01D4
01EA:  BCF    FD8.0
01EC:  RLCF   1A,F
01EE:  RLCF   1B,F
01F0:  BRA    01C2
....................         }
01F2:  BRA    01BC
....................     }
.................... }
.................... 
01F4:  SLEEP 
.................... 

Configuration Fuses:
   Word  1: C920   PLL1 CPUDIV1 USBDIV INTRC FCMEN IESO
   Word  2: 1E3E   PUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 0700   CCP2C1 PBADEN LPT1OSC NOMCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
