Circuitos integrados programables limitados (GAL, EEPROM, Micros, DSP, DSC)
Circuitos integrados de unico proposito (NE555, LM371, TL084)

Algebra booleana
a * b = AND
a + b = OR

Investigar postulados del algebra de bool

Menor consumo de compuertas logicas -> menor latencia

Arquitecturas de microcontroladores
Bonenewman
Hardvard

Todos los pines tienen estos 3 registros:

TRIS: Establecemos el pin como entrada o salida
PORT: Input
LAT:  Output

-----------------------------------------------------------------------------------------------------------------------

WDT: Reinicia el microcontrolador durante la ejecucion cada cierto tiempo, reseteado asi la memoria RAM

Registros para el control del multiplexador del oscilador
FOSC (4 bits)
OSCCON

Microcontroladores discretos: Ocupa un oscilador para saber en que lapsos de tiempo trabajar
-----------------------------------------------------------------------------------------------------------------------

Interrupciones: Tienen jerarquias e interrumpen la secuencia de ejecucion, si se detecta una señal.

Externa: Una señal externa (Boton, sensor, etc)
Interna: Mediante un timer o recurso interno

La prioridad de las interrupciones se habilita con el bit IPEN (7mo bit en el registro RCON)

Registro INTCON, INTCON2 e INTCON3: 8 bits para configuracion de interrupciones

Banderas: Podemos activar manualmente una interrupcion, mediante una bandera.

-----------------------------------------------------------------------------------------------------------------------

ADC

El ADC siempre convierte los datos en 10 bits, y ocupa 2 ciclos maquina para la conversion. 
La conversion del ADC funciona en paralelo, cada ciertos ciclos de reloj

REGISTROS UTILIZADOS
Los bits que no aparecen son 0

Registro ADRESH: Parte alta del resultado del ADC

Registro ADRESL: Parte baja del resultado del ADC

Registo ADCON0:
BIT 0 --- ADON: A/D On bit
Activamos el ADC

BIT 1 --- GO/DONE: A/D Conversion Status bit
Bandera para saber el estatus de la conversion (1 conversion en progreso, 0 inactivo)

BIT 5-2 --- CHS3:CHS0: Analog Channel Select bits
Seleccion del canal ADC a leer


Registro ADCON1:
BIT 0-3 --- PCFG3:PCFG0: A/D Port Configuration Control bits
Seleccion de puertos analogicos a utilizar

BIT 4 --- VCFG0: Voltage Reference Configuration bit (VREF+ source)
Activacion del voltaje de referencia superior

BIT 5 --- VCFG1: Voltage Reference Configuration bit (VREF- source)
Activacion del voltaje de referencia inferior


Registro ADCON2:
BIT 0-2 --- ADCS2:ADCS0: A/D Conversion Clock Select bits
En base a la frecuencia de reloj, cada cuantos ciclos se realiza una conversion (2, 4, 8, 32, 64)
Al ADC le toma minimo 2 ciclos de reloj hacer una conversion de 10 bits (Porque el microcontrolador es de 8 bits)

BIT 3-5 --- ACQT2:ACQT0: A/D Acquisition Time Select bits
Tiempo en el que recoge los datos convertidos por el ADC, por default es 0

BIT 7 --- ADFM: A/D Result Format Select bit
0 Justificado a la izquierda   |    1 Justificado a la derecha
Sirve para darle mas importancia a los bit mas significativos o los bit menos significativos

-----------------------------------------------------------------------------------------------------------------------
CCP (Capture Compare PWM)
Captura
El PWM es de 10 bits (2 B-S en CCP1CON BIT4-5, 8 B+S EN CCPR1L), por lo que podemos modificar el 100%
del duty cicle con una resolucion de 10 bits o 1023

Desventaja, solo podemos tener 2 PWM con diferente duty cicle pero con la misma frecuencia, si ocupamos
mas de 2 modulos o a diferente frecuencia hay que hacerlo con timers

-----------------------------------------------------------------------------------------------------------------------
EPWM (ENHANCED PULS WITH MODULATED)

Utiliza los timers 1,2 y 3, pero si usamos PWM solo podremos usar el timer 2. Podemos generar hasta 4 PWM, 2 identicos 
y sus complementarios o todos iguales.

BIT 7-6 --- P1M1:P1M0:
    Si CCP1M3:CCP1M2 = 00, 01, 10:                        // Si CCP1M esta configurado para captura y compara no importa
        xx = P1A assigned as Capture/Compare input/output; P1B, P1C, P1D assigned as port pins
    Si CCP1M3:CCP1M2 = 11:                                // Si CCP1M esta configurado como PWM                                
    
    // Establecemos que PWM complementarios se habilitan todos dependen del mismo duty cicle y la misma frecuencia

        00 = Single output: P1A modulated; P1B, P1C, P1D assigned as port pins                              // 1 PWM
        01 = Full-bridge output forward: P1D modulated; P1A active; P1B, P1C inactive                       // 4 PWM
        10 = Half-bridge output: P1A, P1B modulated with dead-band control; P1C, P1D assigned as port pins  // 2 PWM
        11 = Full-bridge output reverse: P1B modulated; P1C active; P1A, P1D inactive                       // 4 PWM

BIT 5-4 --- DC1B1:DC1B0: PWM Duty Cycle Bit 1 and Bit 0
    Capture mode: Unused
    Compare mode: Unused
    PWM mode: These bits are the two LSbs of the 10-bit PWM duty cycle. The eight MSbs of the duty cycle are found in CCPR1L.

BIT 3-0 --- CCP1M3:CCP1M0: Enhanced CCP Mode Select bits
    0000 = Capture/Compare/PWM off (resets ECCP module)
    0001 = Reserved
    // MODO CAPTURA
    0010 = Compare mode, toggle output on match
    0011 = Capture mode
    0100 = Capture mode, every falling edge
    0101 = Capture mode, every rising edge
    0110 = Capture mode, every 4th rising edge
    0111 = Capture mode, every 16th rising edge
    // MODO COMPARA
    1000 = Compare mode, initialize CCP1 pin low, set output on compare match (set CCP1IF)
    1001 = Compare mode, initialize CCP1 pin high, clear output on compare match (set CCP1IF)
    1010 = Compare mode, generate software interrupt only, CCP1 pin reverts to I/O state
    1011 = Compare mode, trigger special event (CCP1 resets TMR1 or TMR3, sets CCP1IF bit)
    // MODO PWM                                                         // Establecemos como se muebe el PWM
    1100 = PWM mode: P1A, P1C active-high; P1B, P1D active-high
    1101 = PWM mode: P1A, P1C active-high; P1B, P1D active-low
    1110 = PWM mode: P1A, P1C active-low; P1B, P1D active-high
    1111 = PWM mode: P1A, P1C active-low; P1B, P1D active-low

The module’s output mode and polarity are configured by setting the P1M1:P1M0, and CCP1M3:CCP1M0 bits of the CCP1CON
register.

-----------------------------------------------------------------------------------------------------------------------
RS232:
Las funciones de salida de la libreria (printf, putc), lo mandan al ultimo preprocesador RS232 declarado

-----------------------------------------------------------------------------------------------------------------------
Protocolos Sincronos

Para comunicar mas de 2 microcontroladores entre si, evitando una interferencia o perdidad de datos. Este esta constituido
por un maestro y esclavos

Maestro: Es el moderador que establece la velocidad de comunicacion y determina quien le envia informacion 

Podemos moderar la transferencia de informacion de varias formas:

Con un pin indicador: Cada esclavo tiene un CS/SS (Chip selector), por lo que al activarlo le indicamos que habra
una transferencia de datos con el. (Desventaja el uso de mas pines a mas esclavos)

Con un identificador: Cada esclavo tiene un identificador, 





























































































































































































































































































































